version: '3'

services:
    db:
        image: postgres:latest
        container_name: db
        volumes:
            - db-data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - transcendence
        restart: unless-stopped
        env_file: .env
        healthcheck:
            test: pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            interval: 5s
            timeout: 1s
            retries: 20
            start_period: 5s

    back_auth:
        image: back_auth
        container_name: back_auth
        build:
            context: back_auth
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "8000:8000"
        networks:
            - transcendence
        restart: unless-stopped
        env_file: .env
        healthcheck:
            test: 'python3 transcendence_django/manage.py health_check'
            interval: 5s
            timeout: 1s
            retries: 10
            start_period: 5s

    front:
        image: front
        container_name: front
        build:
            context: front
        volumes:
            - front-data:/usr/share/nginx/html
        ports:
            - "4200:443"
        networks:
            - transcendence
        restart: unless-stopped
        depends_on:
            back_auth:
                condition: service_healthy
        healthcheck:
            test: 'curl -kfsSL https://localhost:443/'
            interval: 5s
            timeout: 1s
            retries: 10
            start_period: 5s

    # yoinked, updated, and tinkered with from https://github.com/ouidou/monitoring-bootstrap/tree/master
    prometheus:
        image: prom/prometheus:v2.35.0
        container_name: prometheus
        user: root
        deploy:
            replicas: 1
        volumes:
            - prometheus-data:/prometheus
            - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            # - ./alertmanager/alert.rules/alerts.rules.yml:/alertmanager/alert.rules/alerts.rules.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=365d'
        ports:
            - "9090:9090"
        depends_on:
            blackbox:
                condition: service_healthy
            node_exporter:
                condition: service_healthy
        healthcheck:
            test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090" ]
            interval: 5s
            timeout: 1s
            retries: 10
            start_period: 5s
        networks:
            - transcendence

    # alertmanager:
    #     image: prom/alertmanager:v0.18.0
    #     container_name: alertmanager
    #     deploy:
    #         replicas: 1
    #     volumes:
    #         - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    #         - ./alertmanager/templates/default.tmpl:/etc/alertmanager/templates/default.tmpl
    #     command:
    #         - '--config.file=/etc/alertmanager/alertmanager.yml'
    #     ports:
        #     - "8000:8000"
        # networks:
        #     - transcendence

    grafana:
        image: grafana/grafana:9.3.6
        container_name: grafana
        environment:
            - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
        user: root
        deploy:
            replicas: 1
        depends_on:
            prometheus:
                condition: service_healthy
        healthcheck:
            test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000" ]
            interval: 5s
            timeout: 1s
            retries: 10
            start_period: 5s
        volumes:
            - grafana-data:/var/lib/grafana
            - ./monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
            - ./monitoring/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
            - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
            - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
        ports:
            - "3000:3000"
        networks:
            - transcendence

    blackbox:
        image: prom/blackbox-exporter:v0.14.0
        container_name: blackbox_exporter
        deploy:
            replicas: 1
        healthcheck:
            test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9115" ]
            interval: 5s
            timeout: 1s
            retries: 10
            start_period: 5s
        volumes:
            - ./monitoring/blackbox:/config
        networks:
            - transcendence

    node_exporter:
        image: prom/node-exporter:v0.18.1
        container_name: node_exporter
        deploy:
            replicas: 1
        ports:
            - "9101:9100"
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/metrics"]
            interval: 5s
            timeout: 1s
            retries: 10
            start_period: 5s
        networks:
            - transcendence

volumes:
    prometheus-data:
    grafana-data:
    front-data:
        driver: local
        driver_opts:
            type: 'none'
            o: 'bind'
            device: './front/dist/transcendence/browser'
    db-data:


networks:
    transcendence:
        name: transcendence
